{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xAAfb15E31d9ad1be145f7CF169B1b5DdD10680e6",
      "txHash": "0x7da090ac475ec6871059576b84ccef4dfad57adfa70cea3e58e81393c849788e",
      "kind": "transparent"
    },
    {
      "address": "0x6D42CCBD3de554B8C0e10F0d29335636E22a7EDE",
      "txHash": "0x95120807b70d86f449073cff49fc97ec3d65f6b8a1bd1a410e4bae883ad5317d",
      "kind": "uups"
    },
    {
      "address": "0x3b504CEBf11E428dc5c7d206a78Af1Be9D760c25",
      "txHash": "0xa8294748430c49278ac9913ae346322c9bc897cb9170a2dd613141bba7f84e40",
      "kind": "uups"
    },
    {
      "address": "0x0b47c007777c73119b0db616FcFce0e17F0B485b",
      "txHash": "0x05e1d8b5c909b95d0f3d7f68d5ff63406ef794f328bda62fae6eb7bd8184a6b5",
      "kind": "uups"
    },
    {
      "address": "0x9c42f4e4A6A4A1A44e6718BcB192DF3C61742f6C",
      "txHash": "0x74f2d69f6cb22f8880c35a07d92beb9e790f0f545e0f5efefd2621f1de727841",
      "kind": "uups"
    }
  ],
  "impls": {
    "67fd91e1f445c48c2d5a475a6f877674f7cb4fedb943b05ec12f4a7b81b521e5": {
      "address": "0x95D7c60d7bfb88286c930540B7035D81C73de1BB",
      "txHash": "0x7554641c816ecc71e1845b50fbab12e11671ca45f07f22f9069491894ebb432a",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_struct(Access)412_storage)": {
            "label": "mapping(address => struct AccessManagerUpgradeable.Access)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TargetConfig)406_storage)": {
            "label": "mapping(address => struct AccessManagerUpgradeable.TargetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Schedule)430_storage)": {
            "label": "mapping(bytes32 => struct AccessManagerUpgradeable.Schedule)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_uint64)": {
            "label": "mapping(bytes4 => uint64)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(Role)425_storage)": {
            "label": "mapping(uint64 => struct AccessManagerUpgradeable.Role)",
            "numberOfBytes": "32"
          },
          "t_struct(Access)412_storage": {
            "label": "struct AccessManagerUpgradeable.Access",
            "members": [
              {
                "label": "since",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "delay",
                "type": "t_userDefinedValueType(Delay)3846",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagerStorage)463_storage": {
            "label": "struct AccessManagerUpgradeable.AccessManagerStorage",
            "members": [
              {
                "label": "_targets",
                "type": "t_mapping(t_address,t_struct(TargetConfig)406_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_roles",
                "type": "t_mapping(t_uint64,t_struct(Role)425_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_schedules",
                "type": "t_mapping(t_bytes32,t_struct(Schedule)430_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_executionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)1387_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Role)425_storage": {
            "label": "struct AccessManagerUpgradeable.Role",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_struct(Access)412_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "admin",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "guardian",
                "type": "t_uint64",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "grantDelay",
                "type": "t_userDefinedValueType(Delay)3846",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Schedule)430_storage": {
            "label": "struct AccessManagerUpgradeable.Schedule",
            "members": [
              {
                "label": "timepoint",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nonce",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TargetConfig)406_storage": {
            "label": "struct AccessManagerUpgradeable.TargetConfig",
            "members": [
              {
                "label": "allowedRoles",
                "type": "t_mapping(t_bytes4,t_uint64)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminDelay",
                "type": "t_userDefinedValueType(Delay)3846",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "closed",
                "type": "t_bool",
                "offset": 14,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_userDefinedValueType(Delay)3846": {
            "label": "Time.Delay",
            "numberOfBytes": "14",
            "underlying": "t_uint112"
          },
          "t_uint112": {
            "label": "uint112"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessManager": [
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_targets",
              "type": "t_mapping(t_address,t_struct(TargetConfig)406_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:106",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_uint64,t_struct(Role)425_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:107",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_schedules",
              "type": "t_mapping(t_bytes32,t_struct(Schedule)430_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:108",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_executionId",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:112",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d511e0a6203079103915dc814b2fd5d32f6171caa4801b3d0e9b28f6e1479eec": {
      "address": "0xff9B9e0cc2b72d24cf11E1565F4D72c50876042D",
      "txHash": "0x700d141a263c74887cb8686adccf4d47ea0c6528ad6bf618d88ea8bf8950448a",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(AccessManagedStorage)335_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)1387_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)1622_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0ae957707a568b22d811efa22a5db9e4e983bd3c2f139cc058579b1a53aad4a8": {
      "address": "0x94750814b04c9A25784e257245eDCD6dDA6fE989",
      "txHash": "0xb14aa294ded029e0001ffecd4a4a2e7cc0167255ef32911e23b323817410c2c9",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PaymentState)1896_storage)": {
            "label": "mapping(bytes32 => struct DeelitProtocol.PaymentState)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DeelitProtocolStorage)1908_storage": {
            "label": "struct DeelitProtocol.DeelitProtocolStorage",
            "members": [
              {
                "label": "_payments",
                "type": "t_mapping(t_bytes32,t_struct(PaymentState)1896_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1407_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1271_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1407_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PaymentState)1896_storage": {
            "label": "struct DeelitProtocol.PaymentState",
            "members": [
              {
                "label": "payer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "acceptance",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "conflict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vesting",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.DeelitProtocol": [
            {
              "contract": "DeelitProtocol",
              "label": "_payments",
              "type": "t_mapping(t_bytes32,t_struct(PaymentState)1896_storage)",
              "src": "contracts/protocol/DeelitProtocol.sol:38",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1407_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "946ddee0658d0b433b28b487229282c1eb22a511a36d7b483f3fae08347b4323": {
      "address": "0x673Cb6b3aE5e11e9B4EACA8903A2380d471E0B57",
      "txHash": "0x0d2f760090cf218030f7a45431fd846d2cb34381d1380b6a8119f5482d877a4a",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)2062": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)2110": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1771": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1652_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1195_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Fee)1407_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1271_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1407_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1652_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1771",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1195_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1667_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)2062",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1652_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)2076_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)2110",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)2062",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1652_storage)",
              "src": "contracts/lottery/Lottery.sol:56",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1407_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)2110",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f6182212fd12538923fcd77d5b879b03eef66190ca9b5f6c464520d5a94b8b06": {
      "address": "0xb5880ce205D40a33cA5e9F3DEAe345d255A624b0",
      "txHash": "0x1566bf08795ac8f2b4801e728902f67bd038bb1220814efc48819dd4e0b4f00e",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)427": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1746": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1794": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1637": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1068_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Fee)1273_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1144_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1273_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1518_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1637",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1068_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1533_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)427",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1746",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1760_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1794",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)427",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1746",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)",
              "src": "contracts/lottery/Lottery.sol:56",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1273_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1794",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f4c695917f405d4f18c1284df1d80aee7efe06263118f065a65964a047a3a0c7": {
      "address": "0x299605392263a53B21bfCfE841e01c1F7Dc390f5",
      "txHash": "0xfbaf9fb626d38282c39b721537e2e7eeb4e0d7736d3e2a66a942deee395ad45e",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)427": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1746": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1794": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1637": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1068_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Fee)1273_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1144_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1273_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1518_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1637",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1068_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1533_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)427",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1746",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1760_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1794",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)427",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1746",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)",
              "src": "contracts/lottery/Lottery.sol:56",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1273_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1794",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c3196df3cecefaf3bd88b8eb5849a528bec0e72adcdafcd0d1094e51260db900": {
      "address": "0xC623A9E0BF298c35EEC2c32C46A6306CB8080F65",
      "txHash": "0xc4473fcf15939935476737d45b9dbee4f2c6e97f37d5565afecc4bef315faed3",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PaymentState)2171_storage)": {
            "label": "mapping(bytes32 => struct DeelitProtocol.PaymentState)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DeelitProtocolStorage)2183_storage": {
            "label": "struct DeelitProtocol.DeelitProtocolStorage",
            "members": [
              {
                "label": "_payments",
                "type": "t_mapping(t_bytes32,t_struct(PaymentState)2171_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1688_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1453_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1688_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PaymentState)2171_storage": {
            "label": "struct DeelitProtocol.PaymentState",
            "members": [
              {
                "label": "payer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "acceptance",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "conflict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vesting",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.DeelitProtocol": [
            {
              "contract": "DeelitProtocol",
              "label": "_payments",
              "type": "t_mapping(t_bytes32,t_struct(PaymentState)2171_storage)",
              "src": "contracts/protocol/DeelitProtocol.sol:38",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1688_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "cef7c60374494a38f975187682e6ca08b3eb4dadb7959949f3294a6c2c2f0167": {
      "address": "0xd1799157810CC640d3b2D7D39c2115892934E454",
      "txHash": "0xef63aa47f5c8af5d0beddf06d690ee22d73c13de0fb1aace4fd32d01d7eb305e",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)2341": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)2389": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)2052": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1933_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1377_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Fee)1688_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1453_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1688_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1933_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)2052",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1377_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1948_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)2341",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1933_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)2355_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)2389",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)2341",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1933_storage)",
              "src": "contracts/lottery/Lottery.sol:56",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1688_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)2389",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e591fe852a035c966c8463dcebfd09a742e5d528b1bc0bcca737f9e67d778b79": {
      "address": "0xDFD4c4fbDed9B09A9Ae213f776535e926812f570",
      "txHash": "0x39bad2b6ef3235c2c70bacbc5d0d7f1434cd98725c511bb36c46132b52d73927",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1814": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1862": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1707": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1135_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1340_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1211_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1340_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1587_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1707",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1135_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1602_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1814",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1828_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1862",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:52",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1814",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1340_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1862",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a3989eb0e30ef64135d83c13de39cd868d4507beda3e9bb3a0ee2cc9d9a0052c": {
      "address": "0x8a526f008378Ead16195725Dbb9D74E257580c49",
      "txHash": "0x8086aee291d78b934917a5c6dc94b2d383f0f9db25d9020915fe36817e8a0a12",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1814": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1862": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1707": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1135_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1340_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1211_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1340_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1587_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1707",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1135_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1602_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1814",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1828_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1862",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:52",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1814",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1340_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1862",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
