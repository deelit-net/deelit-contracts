{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x52c38502192CF9657B0053C49e9C78F188D6C77D",
      "txHash": "0x2e7be6c4cc1d76acab5ebf0944fc9407e4da985977f1357b5577be2b4bbdd644",
      "kind": "transparent"
    },
    {
      "address": "0x652e084Ab4eBF69e3A82517AAf960AcC40E27aD6",
      "txHash": "0xae2ba1b1d5e454ce6ce0d9a8372b15607346b74319eb3f27437807538e69b722",
      "kind": "uups"
    },
    {
      "address": "0x469dd47E5834fa299126403Aa89Fa9D22A46a262",
      "txHash": "0x250a5d0cd53aef70f949f63df368333ac089e0d5b56dfe6903e286d3f677f14f",
      "kind": "uups"
    },
    {
      "address": "0x336C021524766Ef43c82c7D812979e130312Fb07",
      "txHash": "0x45749a5451a5f31c913e1257cc8b1a74508d72880573df9943835ce77d617fd6",
      "kind": "uups"
    },
    {
      "address": "0x8c6934468E41B5c041a0dE70788319BBcad6089E",
      "txHash": "0x6f5c43b5787d8bbbf0c34fa3e4a317d57b90871a17a6bea8e992ac41130b6f39",
      "kind": "uups"
    },
    {
      "address": "0x50D5Fb5487a5E408bA2aC8B6a022D1CBCdc46d87",
      "txHash": "0xd82ac68a71e6c6ac24f3d4d11917e487f92916c6b3722a7991c946c15e24c2c8",
      "kind": "uups"
    },
    {
      "address": "0x5cfD49Bd1d63Ec2C5d5ED554FcCf6F9e0498a3D3",
      "txHash": "0xc0b2da5404e6497fce840bd65797c4accf69a3c4d126f1193955e151ce599706",
      "kind": "uups"
    }
  ],
  "impls": {
    "67fd91e1f445c48c2d5a475a6f877674f7cb4fedb943b05ec12f4a7b81b521e5": {
      "address": "0x0BD9338F607FBF251E5939073783C8Ebdbd65bba",
      "txHash": "0x737045192c3194fd05579d9ae2bdeb16ce4b26c472f81bdf8ddbd95d4588c97e",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_struct(Access)443_storage)": {
            "label": "mapping(address => struct AccessManagerUpgradeable.Access)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TargetConfig)437_storage)": {
            "label": "mapping(address => struct AccessManagerUpgradeable.TargetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Schedule)461_storage)": {
            "label": "mapping(bytes32 => struct AccessManagerUpgradeable.Schedule)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_uint64)": {
            "label": "mapping(bytes4 => uint64)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(Role)456_storage)": {
            "label": "mapping(uint64 => struct AccessManagerUpgradeable.Role)",
            "numberOfBytes": "32"
          },
          "t_struct(Access)443_storage": {
            "label": "struct AccessManagerUpgradeable.Access",
            "members": [
              {
                "label": "since",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "delay",
                "type": "t_userDefinedValueType(Delay)3953",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagerStorage)494_storage": {
            "label": "struct AccessManagerUpgradeable.AccessManagerStorage",
            "members": [
              {
                "label": "_targets",
                "type": "t_mapping(t_address,t_struct(TargetConfig)437_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_roles",
                "type": "t_mapping(t_uint64,t_struct(Role)456_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_schedules",
                "type": "t_mapping(t_bytes32,t_struct(Schedule)461_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_executionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)1540_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Role)456_storage": {
            "label": "struct AccessManagerUpgradeable.Role",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_struct(Access)443_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "admin",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "guardian",
                "type": "t_uint64",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "grantDelay",
                "type": "t_userDefinedValueType(Delay)3953",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Schedule)461_storage": {
            "label": "struct AccessManagerUpgradeable.Schedule",
            "members": [
              {
                "label": "timepoint",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nonce",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TargetConfig)437_storage": {
            "label": "struct AccessManagerUpgradeable.TargetConfig",
            "members": [
              {
                "label": "allowedRoles",
                "type": "t_mapping(t_bytes4,t_uint64)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminDelay",
                "type": "t_userDefinedValueType(Delay)3953",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "closed",
                "type": "t_bool",
                "offset": 14,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_userDefinedValueType(Delay)3953": {
            "label": "Time.Delay",
            "numberOfBytes": "14",
            "underlying": "t_uint112"
          },
          "t_uint112": {
            "label": "uint112"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessManager": [
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_targets",
              "type": "t_mapping(t_address,t_struct(TargetConfig)437_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:106",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_uint64,t_struct(Role)456_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:107",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_schedules",
              "type": "t_mapping(t_bytes32,t_struct(Schedule)461_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:108",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_executionId",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:112",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d511e0a6203079103915dc814b2fd5d32f6171caa4801b3d0e9b28f6e1479eec": {
      "address": "0xe927c32C9756ff904E1fDB2291b7A6Be1c8404Da",
      "txHash": "0x7fc7ef32a2fcbe7bb02bfb89be1ac082c8e517da698c7a9dcee29c7f78d39ab1",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(AccessManagedStorage)366_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)1540_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)1995_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f405dc07bb92229a8ba6e5cda09b51c9651896d1d52e1c98b0addaabc55f81c7": {
      "address": "0xA068436dc4970E3f7a9592c3d5Be4fB0705D5B81",
      "txHash": "0xf9ce4268986df81c570e64f78df982f36f176bbf29a11d6a4d657db8efd0702e",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PaymentState)1956_storage)": {
            "label": "mapping(bytes32 => struct DeelitProtocol.PaymentState)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DeelitProtocolStorage)1963_storage": {
            "label": "struct DeelitProtocol.DeelitProtocolStorage",
            "members": [
              {
                "label": "_payments",
                "type": "t_mapping(t_bytes32,t_struct(PaymentState)1956_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1423_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1271_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1423_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PaymentState)1956_storage": {
            "label": "struct DeelitProtocol.PaymentState",
            "members": [
              {
                "label": "payer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "acceptance",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "conflict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vesting",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.DeelitProtocol": [
            {
              "contract": "DeelitProtocol",
              "label": "_payments",
              "type": "t_mapping(t_bytes32,t_struct(PaymentState)1956_storage)",
              "src": "contracts/protocol/DeelitProtocol.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1423_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "fb55b96f899d135adb70283e36a9e4f7464a66707c41f17bc3d2f294cc8d5a5c": {
      "address": "0xa0401B3CaE84F998924D119AcCc35d0e64f54cf3",
      "txHash": "0x50b1cbdd436523ae069f5c12f4f78fc4f7098b32243fa0b366a67d827c0c9006",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)2133": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)2183": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1832": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1664_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1195_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1423_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1271_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1423_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1664_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1832",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1195_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(LotteryStorage)1681_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)2133",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1664_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_protocolMinVestingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)2147_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)2183",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)2133",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1664_storage)",
              "src": "contracts/lottery/Lottery.sol:56",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "Lottery",
              "label": "_protocolMinVestingPeriod",
              "type": "t_uint256",
              "src": "contracts/lottery/Lottery.sol:57",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1423_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)2183",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ab5f2e8baae8d031f7cf40726d39df24b737b930e78a3396048cf8194f247ce8": {
      "address": "0xdD281b901B4fC241B1b0acD1BE8Bc8a8842d7bb0",
      "txHash": "0x4ab1dc58425916d9d8e87106e3e1876ddf4fca96ef70acfca65588d37e58713a",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint208)3180_storage)dyn_storage": {
            "label": "struct Checkpoints.Checkpoint208[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace208)3175_storage)": {
            "label": "mapping(address => struct Checkpoints.Trace208)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)311_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint208)3180_storage": {
            "label": "struct Checkpoints.Checkpoint208",
            "members": [
              {
                "label": "_key",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint208",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)1743_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)1397_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)1232_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)1629_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Trace208)3175_storage": {
            "label": "struct Checkpoints.Trace208",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint208)3180_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(VotesStorage)1151_storage": {
            "label": "struct VotesUpgradeable.VotesStorage",
            "members": [
              {
                "label": "_delegatee",
                "type": "t_mapping(t_address,t_address)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_delegateCheckpoints",
                "type": "t_mapping(t_address,t_struct(Trace208)3175_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalCheckpoints",
                "type": "t_struct(Trace208)3175_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint208": {
            "label": "uint208",
            "numberOfBytes": "26"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Votes": [
            {
              "contract": "VotesUpgradeable",
              "label": "_delegatee",
              "type": "t_mapping(t_address,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:41",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_delegateCheckpoints",
              "type": "t_mapping(t_address,t_struct(Trace208)3175_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:43",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_totalCheckpoints",
              "type": "t_struct(Trace208)3175_storage",
              "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:45",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a6692a626d4a7dabf54e0abe8f093779e7143e7cd5dcbfa9e2531d67cc3ae777": {
      "address": "0x1C28432f63e034bD9522395C14Ab20433397bcf6",
      "txHash": "0x0807b7f2a19b590cca4ee7af414b8dc9792b390d4f02592e37a35a071680db4c",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint32)8_storage": {
            "label": "uint32[8]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)2477": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IERC5805)2772": {
            "label": "contract IERC5805",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
            "label": "mapping(address => mapping(bytes4 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint128,t_bytes32)": {
            "label": "mapping(uint128 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint32)8_storage)": {
            "label": "mapping(uint256 => uint32[8])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ExecutionPlan)1318_storage)": {
            "label": "mapping(uint256 => struct GovernorTimelockAccessUpgradeable.ExecutionPlan)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)723_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalDetails)1240_storage)": {
            "label": "mapping(uint256 => struct GovernorStorageUpgradeable.ProposalDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalVote)1113_storage)": {
            "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)366_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Deque)3955_storage": {
            "label": "struct DoubleEndedQueue.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_end",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_uint128,t_bytes32)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(EIP712Storage)2122_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ExecutionPlan)1318_storage": {
            "label": "struct GovernorTimelockAccessUpgradeable.ExecutionPlan",
            "members": [
              {
                "label": "length",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "delay",
                "type": "t_uint32",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "managerData",
                "type": "t_mapping(t_uint256,t_array(t_uint32)8_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GovernorCountingSimpleStorage)1120_storage": {
            "label": "struct GovernorCountingSimpleUpgradeable.GovernorCountingSimpleStorage",
            "members": [
              {
                "label": "_proposalVotes",
                "type": "t_mapping(t_uint256,t_struct(ProposalVote)1113_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GovernorSettingsStorage)1170_storage": {
            "label": "struct GovernorSettingsUpgradeable.GovernorSettingsStorage",
            "members": [
              {
                "label": "_proposalThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_votingDelay",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_votingPeriod",
                "type": "t_uint32",
                "offset": 6,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GovernorStorage)755_storage": {
            "label": "struct GovernorUpgradeable.GovernorStorage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_proposals",
                "type": "t_mapping(t_uint256,t_struct(ProposalCore)723_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_governanceCall",
                "type": "t_struct(Bytes32Deque)3955_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(GovernorStorageStorage)1250_storage": {
            "label": "struct GovernorStorageUpgradeable.GovernorStorageStorage",
            "members": [
              {
                "label": "_proposalIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_proposalDetails",
                "type": "t_mapping(t_uint256,t_struct(ProposalDetails)1240_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GovernorTimelockAccessStorage)1336_storage": {
            "label": "struct GovernorTimelockAccessUpgradeable.GovernorTimelockAccessStorage",
            "members": [
              {
                "label": "_ignoreToggle",
                "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_executionPlan",
                "type": "t_mapping(t_uint256,t_struct(ExecutionPlan)1318_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_baseDelay",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)2477",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(GovernorVotesStorage)1432_storage": {
            "label": "struct GovernorVotesUpgradeable.GovernorVotesStorage",
            "members": [
              {
                "label": "_token",
                "type": "t_contract(IERC5805)2772",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)1590_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)2008_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)723_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteStart",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "voteDuration",
                "type": "t_uint32",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 30,
                "slot": "0"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 31,
                "slot": "0"
              },
              {
                "label": "etaSeconds",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProposalDetails)1240_storage": {
            "label": "struct GovernorStorageUpgradeable.ProposalDetails",
            "members": [
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ProposalVote)1113_storage": {
            "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
            "members": [
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorTimelockAccess": [
            {
              "contract": "GovernorTimelockAccessUpgradeable",
              "label": "_ignoreToggle",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockAccessUpgradeable.sol:59",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "GovernorTimelockAccessUpgradeable",
              "label": "_executionPlan",
              "type": "t_mapping(t_uint256,t_struct(ExecutionPlan)1318_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockAccessUpgradeable.sol:61",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "GovernorTimelockAccessUpgradeable",
              "label": "_baseDelay",
              "type": "t_uint32",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockAccessUpgradeable.sol:63",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "GovernorTimelockAccessUpgradeable",
              "label": "_manager",
              "type": "t_contract(IAccessManager)2477",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockAccessUpgradeable.sol:65",
              "offset": 4,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorVotes": [
            {
              "contract": "GovernorVotesUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC5805)2772",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorStorage": [
            {
              "contract": "GovernorStorageUpgradeable",
              "label": "_proposalIds",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorStorageUpgradeable.sol:28",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "GovernorStorageUpgradeable",
              "label": "_proposalDetails",
              "type": "t_mapping(t_uint256,t_struct(ProposalDetails)1240_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorStorageUpgradeable.sol:29",
              "offset": 0,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorCountingSimple": [
            {
              "contract": "GovernorCountingSimpleUpgradeable",
              "label": "_proposalVotes",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)1113_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol:31",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorSettings": [
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_proposalThreshold",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:16",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_votingDelay",
              "type": "t_uint48",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:18",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_votingPeriod",
              "type": "t_uint32",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:20",
              "offset": 6,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.Governor": [
            {
              "contract": "GovernorUpgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:52",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "GovernorUpgradeable",
              "label": "_proposals",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)723_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "GovernorUpgradeable",
              "label": "_governanceCall",
              "type": "t_struct(Bytes32Deque)3955_storage",
              "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:60",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
