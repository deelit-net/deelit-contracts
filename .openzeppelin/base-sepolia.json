{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x75359d1b02731c15FAD3929D5476C40ED3EB3F62",
      "txHash": "0xbdef36a0328b475d10444410121e0e5353764df308e62811cbd88d4a64471203",
      "kind": "transparent"
    },
    {
      "address": "0xC22421d305CB2a3F40c5A163a916Ad432612535C",
      "txHash": "0x352009bb531f9f33ed119d61716857114ebc4cb307bdecfb397e3b3634a34be3",
      "kind": "uups"
    },
    {
      "address": "0xA4f8E7233d347F5433b3A48848Ca3cB2CbA5B158",
      "txHash": "0xb26be081e275880de4607932d9c9aaacda851309199954de51fc28aaca3dd077",
      "kind": "uups"
    },
    {
      "address": "0x7CbB4012e451fC259f9398CE39F85fe9d7D0C1b1",
      "txHash": "0x1196c1421074815304eabb6c4d7f35d015e02565b0da552df4785e38518a209f",
      "kind": "uups"
    },
    {
      "address": "0x79dC9B2a02c6c403188172848A0310bfC1a90E9B",
      "txHash": "0x23d6d116bcd825e8ea1537086ab7466d38900395a6204c11e69e295318cd2492",
      "kind": "uups"
    },
    {
      "address": "0xe9691132fE4d650251dde2B6dEec9cdc043ff6d5",
      "txHash": "0x72d93ccf0b72d1bdfd2d94eb998e117acb4117ea23fd0021ee1a721dea760e8d",
      "kind": "uups"
    }
  ],
  "impls": {
    "67fd91e1f445c48c2d5a475a6f877674f7cb4fedb943b05ec12f4a7b81b521e5": {
      "address": "0xEf5ae78D928f1Cef4D997e86ffe9DE1aCDB8be0f",
      "txHash": "0xcd647d0894d32816947d3962056db7e08fa345ae0b62239cc0689368f04e500f",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_struct(Access)412_storage)": {
            "label": "mapping(address => struct AccessManagerUpgradeable.Access)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TargetConfig)406_storage)": {
            "label": "mapping(address => struct AccessManagerUpgradeable.TargetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Schedule)430_storage)": {
            "label": "mapping(bytes32 => struct AccessManagerUpgradeable.Schedule)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_uint64)": {
            "label": "mapping(bytes4 => uint64)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(Role)425_storage)": {
            "label": "mapping(uint64 => struct AccessManagerUpgradeable.Role)",
            "numberOfBytes": "32"
          },
          "t_struct(Access)412_storage": {
            "label": "struct AccessManagerUpgradeable.Access",
            "members": [
              {
                "label": "since",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "delay",
                "type": "t_userDefinedValueType(Delay)3846",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagerStorage)463_storage": {
            "label": "struct AccessManagerUpgradeable.AccessManagerStorage",
            "members": [
              {
                "label": "_targets",
                "type": "t_mapping(t_address,t_struct(TargetConfig)406_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_roles",
                "type": "t_mapping(t_uint64,t_struct(Role)425_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_schedules",
                "type": "t_mapping(t_bytes32,t_struct(Schedule)430_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_executionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)1387_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Role)425_storage": {
            "label": "struct AccessManagerUpgradeable.Role",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_struct(Access)412_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "admin",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "guardian",
                "type": "t_uint64",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "grantDelay",
                "type": "t_userDefinedValueType(Delay)3846",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Schedule)430_storage": {
            "label": "struct AccessManagerUpgradeable.Schedule",
            "members": [
              {
                "label": "timepoint",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nonce",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TargetConfig)406_storage": {
            "label": "struct AccessManagerUpgradeable.TargetConfig",
            "members": [
              {
                "label": "allowedRoles",
                "type": "t_mapping(t_bytes4,t_uint64)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminDelay",
                "type": "t_userDefinedValueType(Delay)3846",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "closed",
                "type": "t_bool",
                "offset": 14,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_userDefinedValueType(Delay)3846": {
            "label": "Time.Delay",
            "numberOfBytes": "14",
            "underlying": "t_uint112"
          },
          "t_uint112": {
            "label": "uint112"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessManager": [
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_targets",
              "type": "t_mapping(t_address,t_struct(TargetConfig)406_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:106",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_uint64,t_struct(Role)425_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:107",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_schedules",
              "type": "t_mapping(t_bytes32,t_struct(Schedule)430_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:108",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_executionId",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:112",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d511e0a6203079103915dc814b2fd5d32f6171caa4801b3d0e9b28f6e1479eec": {
      "address": "0xA3D06B4edFF9fF7000f32A0423982d2E7BD6f9f4",
      "txHash": "0xbf5db57040109a961af42ac6226a67f65880706a612e11de9b04d923e3e69383",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(AccessManagedStorage)335_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)1387_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)1622_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0ae957707a568b22d811efa22a5db9e4e983bd3c2f139cc058579b1a53aad4a8": {
      "address": "0x2039e18C0c10389B74559Ad05Eaf7A0FC276176B",
      "txHash": "0x0df9add3aeb6a8179ebdefb9b5aa7121878982f6b99403707178965c9ec54327",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PaymentState)1896_storage)": {
            "label": "mapping(bytes32 => struct DeelitProtocol.PaymentState)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DeelitProtocolStorage)1908_storage": {
            "label": "struct DeelitProtocol.DeelitProtocolStorage",
            "members": [
              {
                "label": "_payments",
                "type": "t_mapping(t_bytes32,t_struct(PaymentState)1896_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1407_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1271_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1407_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PaymentState)1896_storage": {
            "label": "struct DeelitProtocol.PaymentState",
            "members": [
              {
                "label": "payer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "acceptance",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "conflict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vesting",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.DeelitProtocol": [
            {
              "contract": "DeelitProtocol",
              "label": "_payments",
              "type": "t_mapping(t_bytes32,t_struct(PaymentState)1896_storage)",
              "src": "contracts/protocol/DeelitProtocol.sol:38",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1407_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "946ddee0658d0b433b28b487229282c1eb22a511a36d7b483f3fae08347b4323": {
      "address": "0xdeD595257D2d6a7bBb332AdccBfb3BD76E3A111d",
      "txHash": "0xce3da890ee6042cf771e046a124a574b873bab5b9a2a791d6ebafe5e2f1012e4",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)2062": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)2110": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1771": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1652_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1195_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Fee)1407_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1271_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1407_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1652_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1771",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1195_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1667_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)2062",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1652_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)2076_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)2110",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)2062",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1652_storage)",
              "src": "contracts/lottery/Lottery.sol:56",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1407_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)2110",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f6182212fd12538923fcd77d5b879b03eef66190ca9b5f6c464520d5a94b8b06": {
      "address": "0x2D6134292b9f3a40202f616E3DC6dae0762F5a1B",
      "txHash": "0x36efc831ea3859cc6e34c316f5a6529fbfaa1182b889a5a7132492cca64cc439",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)427": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1746": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1794": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1637": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1068_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Fee)1273_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1144_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1273_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1518_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1637",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1068_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1533_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)427",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1746",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1760_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1794",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)427",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1746",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)",
              "src": "contracts/lottery/Lottery.sol:56",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1273_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1794",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f4c695917f405d4f18c1284df1d80aee7efe06263118f065a65964a047a3a0c7": {
      "address": "0x928B2337611F87eC4Ad708A4543f0581b0F81E64",
      "txHash": "0xabaad3662fdcca2fabb297cee869034401026572a2ee4248aaf67334ca8838c6",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)427": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1746": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1794": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1637": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1068_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Fee)1273_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1144_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1273_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1518_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1637",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1068_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1533_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)427",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1746",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1760_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1794",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)427",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1746",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)",
              "src": "contracts/lottery/Lottery.sol:56",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1273_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1794",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c3196df3cecefaf3bd88b8eb5849a528bec0e72adcdafcd0d1094e51260db900": {
      "address": "0xbfD2cdfFC33EfFeA6D4cEB64549d1c89606f6bD0",
      "txHash": "0xe9a9d930a6ba19aa47f184af6d75682255ea412e02f888eaeca538c04e6e7919",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PaymentState)2171_storage)": {
            "label": "mapping(bytes32 => struct DeelitProtocol.PaymentState)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DeelitProtocolStorage)2183_storage": {
            "label": "struct DeelitProtocol.DeelitProtocolStorage",
            "members": [
              {
                "label": "_payments",
                "type": "t_mapping(t_bytes32,t_struct(PaymentState)2171_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1688_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1453_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1688_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PaymentState)2171_storage": {
            "label": "struct DeelitProtocol.PaymentState",
            "members": [
              {
                "label": "payer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "acceptance",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "conflict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vesting",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.DeelitProtocol": [
            {
              "contract": "DeelitProtocol",
              "label": "_payments",
              "type": "t_mapping(t_bytes32,t_struct(PaymentState)2171_storage)",
              "src": "contracts/protocol/DeelitProtocol.sol:38",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1688_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "cef7c60374494a38f975187682e6ca08b3eb4dadb7959949f3294a6c2c2f0167": {
      "address": "0xB0f18F89230e934355e824c3B57f86799f9F0702",
      "txHash": "0x7372aa71e125b276f907d4505f23244e264d702117619621cdf2b5db35e70b26",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)2341": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)2389": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)2052": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1933_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1377_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Fee)1688_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1453_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1688_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1933_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)2052",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1377_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1948_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)2341",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1933_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)2355_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)2389",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)2341",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1933_storage)",
              "src": "contracts/lottery/Lottery.sol:56",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1688_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)2389",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e591fe852a035c966c8463dcebfd09a742e5d528b1bc0bcca737f9e67d778b79": {
      "address": "0xc047abd181B83ccdeD2764dE5461bc5e699ff73A",
      "txHash": "0x3c44ec180aeb8bd404cd100bd02a2482021d6b206691f1e42e0419edefd7f34f",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1814": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1862": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1707": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1135_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1340_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1211_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1340_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1587_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1707",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1135_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1602_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1814",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1828_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1862",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:52",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1814",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1340_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1862",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a3989eb0e30ef64135d83c13de39cd868d4507beda3e9bb3a0ee2cc9d9a0052c": {
      "address": "0x56E473B82B26c9B4537B8Dd0d4Ee9a5b37ba4a91",
      "txHash": "0x395229bc0175944a2005486b310180ba878f8e2c371cf3f4a10acc438f02919c",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1814": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1862": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1707": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1135_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1340_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1211_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1340_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1587_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1707",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1135_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1602_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1814",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1828_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1862",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:52",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1814",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1340_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1862",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "991173d4bcca05efccfa0633c1240180bb2de0d8d8fa882d327a48709741f02a": {
      "address": "0x37739BB106c5e85844Fa3422Af0658B329a16390",
      "txHash": "0x7353f20c8f192dd9d4a57c5ee98e2a3901939581c5fba79d1b09cac75b02fe4e",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1805": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1853": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1701": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1583_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1135_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1340_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1211_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1340_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1583_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1701",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1135_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(LotteryStorage)1598_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1805",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1583_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1819_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1853",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:51",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1805",
              "src": "contracts/lottery/Lottery.sol:52",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1583_storage)",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1340_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1853",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
