{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x75359d1b02731c15FAD3929D5476C40ED3EB3F62",
      "txHash": "0xbdef36a0328b475d10444410121e0e5353764df308e62811cbd88d4a64471203",
      "kind": "transparent"
    },
    {
      "address": "0xC22421d305CB2a3F40c5A163a916Ad432612535C",
      "txHash": "0x352009bb531f9f33ed119d61716857114ebc4cb307bdecfb397e3b3634a34be3",
      "kind": "uups"
    },
    {
      "address": "0xA4f8E7233d347F5433b3A48848Ca3cB2CbA5B158",
      "txHash": "0xb26be081e275880de4607932d9c9aaacda851309199954de51fc28aaca3dd077",
      "kind": "uups"
    },
    {
      "address": "0x7CbB4012e451fC259f9398CE39F85fe9d7D0C1b1",
      "txHash": "0x1196c1421074815304eabb6c4d7f35d015e02565b0da552df4785e38518a209f",
      "kind": "uups"
    },
    {
      "address": "0x79dC9B2a02c6c403188172848A0310bfC1a90E9B",
      "txHash": "0x23d6d116bcd825e8ea1537086ab7466d38900395a6204c11e69e295318cd2492",
      "kind": "uups"
    },
    {
      "address": "0xe9691132fE4d650251dde2B6dEec9cdc043ff6d5",
      "txHash": "0x72d93ccf0b72d1bdfd2d94eb998e117acb4117ea23fd0021ee1a721dea760e8d",
      "kind": "uups"
    },
    {
      "address": "0x7aD727A57B4169b038A6B133F081b35C13E0ECfA",
      "txHash": "0x0b3fa8e925197299675a3e77a919dd9669890911666a97fe14143e82e0343454",
      "kind": "uups"
    },
    {
      "address": "0x6f9B7c75ADB6C00B3A87D104b8024483e2597055",
      "txHash": "0x2050c85d12cef1bc71c518dd80879c79eaa18ef978267ae17eaaadaee01e0203",
      "kind": "uups"
    },
    {
      "address": "0x738121CC37e90d497C04D84e0281AD72F2490262",
      "txHash": "0x8ef034989110cbd799bd33741a572c76a17b8c567ff5f232d71a87ad7cfe9b38",
      "kind": "uups"
    }
  ],
  "impls": {
    "67fd91e1f445c48c2d5a475a6f877674f7cb4fedb943b05ec12f4a7b81b521e5": {
      "address": "0xEf5ae78D928f1Cef4D997e86ffe9DE1aCDB8be0f",
      "txHash": "0xcd647d0894d32816947d3962056db7e08fa345ae0b62239cc0689368f04e500f",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_struct(Access)412_storage)": {
            "label": "mapping(address => struct AccessManagerUpgradeable.Access)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TargetConfig)406_storage)": {
            "label": "mapping(address => struct AccessManagerUpgradeable.TargetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Schedule)430_storage)": {
            "label": "mapping(bytes32 => struct AccessManagerUpgradeable.Schedule)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_uint64)": {
            "label": "mapping(bytes4 => uint64)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint64,t_struct(Role)425_storage)": {
            "label": "mapping(uint64 => struct AccessManagerUpgradeable.Role)",
            "numberOfBytes": "32"
          },
          "t_struct(Access)412_storage": {
            "label": "struct AccessManagerUpgradeable.Access",
            "members": [
              {
                "label": "since",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "delay",
                "type": "t_userDefinedValueType(Delay)3846",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagerStorage)463_storage": {
            "label": "struct AccessManagerUpgradeable.AccessManagerStorage",
            "members": [
              {
                "label": "_targets",
                "type": "t_mapping(t_address,t_struct(TargetConfig)406_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_roles",
                "type": "t_mapping(t_uint64,t_struct(Role)425_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_schedules",
                "type": "t_mapping(t_bytes32,t_struct(Schedule)430_storage)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_executionId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)1387_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Role)425_storage": {
            "label": "struct AccessManagerUpgradeable.Role",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_struct(Access)412_storage)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "admin",
                "type": "t_uint64",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "guardian",
                "type": "t_uint64",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "grantDelay",
                "type": "t_userDefinedValueType(Delay)3846",
                "offset": 16,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Schedule)430_storage": {
            "label": "struct AccessManagerUpgradeable.Schedule",
            "members": [
              {
                "label": "timepoint",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "nonce",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TargetConfig)406_storage": {
            "label": "struct AccessManagerUpgradeable.TargetConfig",
            "members": [
              {
                "label": "allowedRoles",
                "type": "t_mapping(t_bytes4,t_uint64)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminDelay",
                "type": "t_userDefinedValueType(Delay)3846",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "closed",
                "type": "t_bool",
                "offset": 14,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_userDefinedValueType(Delay)3846": {
            "label": "Time.Delay",
            "numberOfBytes": "14",
            "underlying": "t_uint112"
          },
          "t_uint112": {
            "label": "uint112"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessManager": [
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_targets",
              "type": "t_mapping(t_address,t_struct(TargetConfig)406_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:106",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_uint64,t_struct(Role)425_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:107",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_schedules",
              "type": "t_mapping(t_bytes32,t_struct(Schedule)430_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:108",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "AccessManagerUpgradeable",
              "label": "_executionId",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagerUpgradeable.sol:112",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d511e0a6203079103915dc814b2fd5d32f6171caa4801b3d0e9b28f6e1479eec": {
      "address": "0xA3D06B4edFF9fF7000f32A0423982d2E7BD6f9f4",
      "txHash": "0xbf5db57040109a961af42ac6226a67f65880706a612e11de9b04d923e3e69383",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(AccessManagedStorage)335_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)1387_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)1622_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "0ae957707a568b22d811efa22a5db9e4e983bd3c2f139cc058579b1a53aad4a8": {
      "address": "0x2039e18C0c10389B74559Ad05Eaf7A0FC276176B",
      "txHash": "0x0df9add3aeb6a8179ebdefb9b5aa7121878982f6b99403707178965c9ec54327",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PaymentState)1896_storage)": {
            "label": "mapping(bytes32 => struct DeelitProtocol.PaymentState)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DeelitProtocolStorage)1908_storage": {
            "label": "struct DeelitProtocol.DeelitProtocolStorage",
            "members": [
              {
                "label": "_payments",
                "type": "t_mapping(t_bytes32,t_struct(PaymentState)1896_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1407_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1271_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1407_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PaymentState)1896_storage": {
            "label": "struct DeelitProtocol.PaymentState",
            "members": [
              {
                "label": "payer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "acceptance",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "conflict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vesting",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.DeelitProtocol": [
            {
              "contract": "DeelitProtocol",
              "label": "_payments",
              "type": "t_mapping(t_bytes32,t_struct(PaymentState)1896_storage)",
              "src": "contracts/protocol/DeelitProtocol.sol:38",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1407_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "946ddee0658d0b433b28b487229282c1eb22a511a36d7b483f3fae08347b4323": {
      "address": "0xdeD595257D2d6a7bBb332AdccBfb3BD76E3A111d",
      "txHash": "0xce3da890ee6042cf771e046a124a574b873bab5b9a2a791d6ebafe5e2f1012e4",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)2062": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)2110": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1771": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1652_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1195_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Fee)1407_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1271_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1407_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1652_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1771",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1195_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1667_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)2062",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1652_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)2076_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)2110",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)2062",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1652_storage)",
              "src": "contracts/lottery/Lottery.sol:56",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1407_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)2110",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f6182212fd12538923fcd77d5b879b03eef66190ca9b5f6c464520d5a94b8b06": {
      "address": "0x2D6134292b9f3a40202f616E3DC6dae0762F5a1B",
      "txHash": "0x36efc831ea3859cc6e34c316f5a6529fbfaa1182b889a5a7132492cca64cc439",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)427": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1746": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1794": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1637": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1068_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Fee)1273_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1144_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1273_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1518_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1637",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1068_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1533_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)427",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1746",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1760_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1794",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)427",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1746",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)",
              "src": "contracts/lottery/Lottery.sol:56",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1273_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1794",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f4c695917f405d4f18c1284df1d80aee7efe06263118f065a65964a047a3a0c7": {
      "address": "0x928B2337611F87eC4Ad708A4543f0581b0F81E64",
      "txHash": "0xabaad3662fdcca2fabb297cee869034401026572a2ee4248aaf67334ca8838c6",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)427": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1746": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1794": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1637": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1068_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Fee)1273_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1144_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1273_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1518_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1637",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1068_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1533_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)427",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1746",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1760_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1794",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)427",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1746",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1518_storage)",
              "src": "contracts/lottery/Lottery.sol:56",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1273_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1794",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "c3196df3cecefaf3bd88b8eb5849a528bec0e72adcdafcd0d1094e51260db900": {
      "address": "0xbfD2cdfFC33EfFeA6D4cEB64549d1c89606f6bD0",
      "txHash": "0xe9a9d930a6ba19aa47f184af6d75682255ea412e02f888eaeca538c04e6e7919",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PaymentState)1518_storage)": {
            "label": "mapping(bytes32 => struct DeelitProtocol.PaymentState)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DeelitProtocolStorage)1530_storage": {
            "label": "struct DeelitProtocol.DeelitProtocolStorage",
            "members": [
              {
                "label": "_payments",
                "type": "t_mapping(t_bytes32,t_struct(PaymentState)1518_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1349_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1232_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1349_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PaymentState)1518_storage": {
            "label": "struct DeelitProtocol.PaymentState",
            "members": [
              {
                "label": "payer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "acceptance",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "conflict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vesting",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.DeelitProtocol": [
            {
              "contract": "DeelitProtocol",
              "label": "_payments",
              "type": "t_mapping(t_bytes32,t_struct(PaymentState)1518_storage)",
              "src": "contracts/protocol/DeelitProtocol.sol:38",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1349_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "cef7c60374494a38f975187682e6ca08b3eb4dadb7959949f3294a6c2c2f0167": {
      "address": "0xB0f18F89230e934355e824c3B57f86799f9F0702",
      "txHash": "0x7372aa71e125b276f907d4505f23244e264d702117619621cdf2b5db35e70b26",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)2341": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)2389": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)2052": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1933_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1377_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Fee)1688_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1453_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1688_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1933_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)2052",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1377_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1948_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)2341",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1933_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)2355_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)2389",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)2341",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1933_storage)",
              "src": "contracts/lottery/Lottery.sol:56",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1688_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)2389",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "e591fe852a035c966c8463dcebfd09a742e5d528b1bc0bcca737f9e67d778b79": {
      "address": "0xc047abd181B83ccdeD2764dE5461bc5e699ff73A",
      "txHash": "0x3c44ec180aeb8bd404cd100bd02a2482021d6b206691f1e42e0419edefd7f34f",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1814": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1862": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1707": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1135_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1340_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1211_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1340_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1587_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1707",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1135_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1602_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1814",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1828_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1862",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:52",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1814",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1340_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1862",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a3989eb0e30ef64135d83c13de39cd868d4507beda3e9bb3a0ee2cc9d9a0052c": {
      "address": "0x56E473B82B26c9B4537B8Dd0d4Ee9a5b37ba4a91",
      "txHash": "0x395229bc0175944a2005486b310180ba878f8e2c371cf3f4a10acc438f02919c",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1814": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1862": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1707": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1135_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1340_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1211_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1340_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1587_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1707",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "participants",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1135_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(LotteryStorage)1602_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1814",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1828_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1862",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:52",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1814",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1587_storage)",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1340_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1862",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "991173d4bcca05efccfa0633c1240180bb2de0d8d8fa882d327a48709741f02a": {
      "address": "0x37739BB106c5e85844Fa3422Af0658B329a16390",
      "txHash": "0x7353f20c8f192dd9d4a57c5ee98e2a3901939581c5fba79d1b09cac75b02fe4e",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1805": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1853": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1701": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1583_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1135_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1340_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1211_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1340_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1583_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1701",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "cachedWinner",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1135_storage",
                "offset": 0,
                "slot": "7"
              }
            ],
            "numberOfBytes": "256"
          },
          "t_struct(LotteryStorage)1598_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1805",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1583_storage)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1819_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1853",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:51",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1805",
              "src": "contracts/lottery/Lottery.sol:52",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1583_storage)",
              "src": "contracts/lottery/Lottery.sol:54",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1340_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1853",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5f86b9e0a03576e56c7b7b58efb9ef4d08b624f346848a8ee512882f93483a89": {
      "address": "0x6cF9CBDf3F27a798b1c77D834da5000A748C77f8",
      "txHash": "0x17f80743936425ceaba47aa4fad7ee09145f3ba863f55cf0c1e54af60a1cd296",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)2085": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)5150": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)5319": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)4731": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)4601_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)366_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)3647_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)1730_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)4360_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)3936_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)4360_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)1418_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)4601_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)4731",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)3647_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(LotteryStorage)4618_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)2085",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)5150",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)4601_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_protocolMinVestingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PausableStorage)1653_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)5164_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)5319",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)2085",
              "src": "contracts/lottery/Lottery.sol:50",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)5150",
              "src": "contracts/lottery/Lottery.sol:51",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:52",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)4601_storage)",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "Lottery",
              "label": "_protocolMinVestingPeriod",
              "type": "t_uint256",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)4360_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)5319",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3ad2eafa9c9b91827ae44d5e1704efeb3e253128e468a8842b78cca1be4867cf": {
      "address": "0x2119Dc11f08886733995f6F8D62D7B0Ac15f3646",
      "txHash": "0x459080fa8c8bb772e690c5f6f00de1d49844a23c07bd93a1be16a3f723df4c69",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)1815": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)1863": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1711": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1581_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1135_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1340_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1211_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1340_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1581_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1711",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1135_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(LotteryStorage)1598_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)1815",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1581_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_protocolMinVestingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)1829_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)1863",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:50",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)1815",
              "src": "contracts/lottery/Lottery.sol:51",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:52",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1581_storage)",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "Lottery",
              "label": "_protocolMinVestingPeriod",
              "type": "t_uint256",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1340_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)1863",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "493e3abb2b3c3b0ed71b341fcd261ce3de02971a1722d8aa8346e5147977bfe1": {
      "address": "0xE48D4392240eaE752BbA6a79c1B5ec3170681F53",
      "txHash": "0xf977cd6e11c3032c2c66fa9f992ee4f2b511959348d3343965a5b67d21eaa4f8",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)2068": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)2116": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)1782": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1652_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1195_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1411_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1271_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1411_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1652_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)1782",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1195_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(LotteryStorage)1669_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)2068",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1652_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_protocolMinVestingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)2082_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)2116",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:50",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)2068",
              "src": "contracts/lottery/Lottery.sol:51",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:52",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1652_storage)",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "Lottery",
              "label": "_protocolMinVestingPeriod",
              "type": "t_uint256",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1411_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)2116",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "7343c9d58cd23924987b9b36e4faf936f6dc2a4b59fecbb04ebe58144d79029e": {
      "address": "0xf189f0fB4EDba8b5d039032758F85411dfb883A0",
      "txHash": "0xee873acfe4472d9734d420e4973e29e6627f5b79d80fe93362ba6aae0fd79e0a",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PaymentState)2191_storage)": {
            "label": "mapping(bytes32 => struct DeelitProtocol.PaymentState)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DeelitProtocolStorage)2203_storage": {
            "label": "struct DeelitProtocol.DeelitProtocolStorage",
            "members": [
              {
                "label": "_payments",
                "type": "t_mapping(t_bytes32,t_struct(PaymentState)2191_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1692_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1453_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1692_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PaymentState)2191_storage": {
            "label": "struct DeelitProtocol.PaymentState",
            "members": [
              {
                "label": "payer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "acceptance",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "conflict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vesting",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.DeelitProtocol": [
            {
              "contract": "DeelitProtocol",
              "label": "_payments",
              "type": "t_mapping(t_bytes32,t_struct(PaymentState)2191_storage)",
              "src": "contracts/protocol/DeelitProtocol.sol:38",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1692_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "f7bf4ded5ff99b9d5b11d1e442ac65e5198a9f1171fc1d77f916697c1441e4c6": {
      "address": "0xAAfb15E31d9ad1be145f7CF169B1b5DdD10680e6",
      "txHash": "0x022503b69a57b3f21aa8d5d5a2586a7d83eb7e5d1a4c9156c5e21bb49288bc51",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)2085": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)5151": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)5320": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)4730": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)4600_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)366_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)3647_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)1730_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)4364_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)3936_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)4364_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)1418_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)4600_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)4730",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)3647_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(LotteryStorage)4617_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)2085",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)5151",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)4600_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_protocolMinVestingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PausableStorage)1653_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)5165_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)5320",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)2085",
              "src": "contracts/lottery/Lottery.sol:50",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)5151",
              "src": "contracts/lottery/Lottery.sol:51",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:52",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)4600_storage)",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "Lottery",
              "label": "_protocolMinVestingPeriod",
              "type": "t_uint256",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)4364_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)5320",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "3cb8dd235919d1ec0b3349fb7161d9790ff62b39566d2b42340347489b5e274e": {
      "address": "0x101598A2A14ac7f038a4edcA694d9293c2d48185",
      "txHash": "0x0b24bef5c3de2b1665b942c9d5c4872194ff529622136a42bdd930cb749d3c67",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PaymentState)4979_storage)": {
            "label": "mapping(bytes32 => struct DeelitProtocol.PaymentState)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)366_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DeelitProtocolStorage)4991_storage": {
            "label": "struct DeelitProtocol.DeelitProtocolStorage",
            "members": [
              {
                "label": "_payments",
                "type": "t_mapping(t_bytes32,t_struct(PaymentState)4979_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)1730_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)4364_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)3936_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)4364_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)1418_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)1653_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PaymentState)4979_storage": {
            "label": "struct DeelitProtocol.PaymentState",
            "members": [
              {
                "label": "payer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "acceptance",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "conflict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vesting",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.DeelitProtocol": [
            {
              "contract": "DeelitProtocol",
              "label": "_payments",
              "type": "t_mapping(t_bytes32,t_struct(PaymentState)4979_storage)",
              "src": "contracts/protocol/DeelitProtocol.sol:37",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)4364_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "853bede433061ba4a01d6153cb19bd3a6de6c59e8fc18145071913667383c909": {
      "address": "0x12190dB0aFBe2c334e632b36F6Ab9AC9e4c137B4",
      "txHash": "0x4af073d3e3f3ec1adebda547b520b98520eae16d1619cafaac16654f529d5d68",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(PaymentState)2188_storage)": {
            "label": "mapping(bytes32 => struct DeelitProtocol.PaymentState)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DeelitProtocolStorage)2200_storage": {
            "label": "struct DeelitProtocol.DeelitProtocolStorage",
            "members": [
              {
                "label": "_payments",
                "type": "t_mapping(t_bytes32,t_struct(PaymentState)2188_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1692_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1453_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1692_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PaymentState)2188_storage": {
            "label": "struct DeelitProtocol.PaymentState",
            "members": [
              {
                "label": "payer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "acceptance",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "conflict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdict",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "vesting",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.DeelitProtocol": [
            {
              "contract": "DeelitProtocol",
              "label": "_payments",
              "type": "t_mapping(t_bytes32,t_struct(PaymentState)2188_storage)",
              "src": "contracts/protocol/DeelitProtocol.sol:37",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1692_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "38ad4e29f665222a462bcb2c6f2585ff05d99428c416d13d207806f0bae8be6b": {
      "address": "0xaBA1e9E6700e12B7c0Fa531C5421D0aEfdE549B3",
      "txHash": "0xb6d3d991a63a02d3d597327faa2ee14dc9f4fa6b5e3e5d140d091d090e7fb321",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)494": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IDeelitProtocol)2360": {
            "label": "contract IDeelitProtocol",
            "numberOfBytes": "20"
          },
          "t_contract(IRandomProducer)2408": {
            "label": "contract IRandomProducer",
            "numberOfBytes": "20"
          },
          "t_enum(LotteryStatus)2060": {
            "label": "enum ILottery.LotteryStatus",
            "members": [
              "None",
              "Open",
              "Drawn",
              "Paid",
              "Canceled"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_bytes32,t_struct(LotteryState)1930_storage)": {
            "label": "mapping(bytes32 => struct Lottery.LotteryState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)26_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(BitMap)1377_storage": {
            "label": "struct BitMaps.BitMap",
            "members": [
              {
                "label": "_data",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)274_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Fee)1692_storage": {
            "label": "struct LibFee.Fee",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount_bp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FeeCollectorStorage)1453_storage": {
            "label": "struct FeeCollector.FeeCollectorStorage",
            "members": [
              {
                "label": "fees",
                "type": "t_struct(Fee)1692_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)69_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LotteryState)1930_storage": {
            "label": "struct Lottery.LotteryState",
            "members": [
              {
                "label": "status",
                "type": "t_enum(LotteryStatus)2060",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "randomRequestId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "paymentHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "verdictHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "ticketCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "tickets",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "redeemed",
                "type": "t_struct(BitMap)1377_storage",
                "offset": 0,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_struct(LotteryStorage)1947_storage": {
            "label": "struct Lottery.LotteryStorage",
            "members": [
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)494",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_protocol",
                "type": "t_contract(IDeelitProtocol)2360",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_protocolDomainSeparator",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_lotteries",
                "type": "t_mapping(t_bytes32,t_struct(LotteryState)1930_storage)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_protocolMinVestingPeriod",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(PausableStorage)197_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RandomConsumerStorage)2374_storage": {
            "label": "struct RandomConsumer.RandomConsumerStorage",
            "members": [
              {
                "label": "randomProducer",
                "type": "t_contract(IRandomProducer)2408",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:deelit.storage.Lottery": [
            {
              "contract": "Lottery",
              "label": "_manager",
              "type": "t_contract(IAccessManager)494",
              "src": "contracts/lottery/Lottery.sol:50",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Lottery",
              "label": "_protocol",
              "type": "t_contract(IDeelitProtocol)2360",
              "src": "contracts/lottery/Lottery.sol:51",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "Lottery",
              "label": "_protocolDomainSeparator",
              "type": "t_bytes32",
              "src": "contracts/lottery/Lottery.sol:52",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "Lottery",
              "label": "_lotteries",
              "type": "t_mapping(t_bytes32,t_struct(LotteryState)1930_storage)",
              "src": "contracts/lottery/Lottery.sol:53",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "Lottery",
              "label": "_protocolMinVestingPeriod",
              "type": "t_uint256",
              "src": "contracts/lottery/Lottery.sol:55",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.FeeCollector": [
            {
              "contract": "FeeCollector",
              "label": "fees",
              "type": "t_struct(Fee)1692_storage",
              "src": "contracts/fee/FeeCollector.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:deelit.storage.RandomConsumer": [
            {
              "contract": "RandomConsumer",
              "label": "randomProducer",
              "type": "t_contract(IRandomProducer)2408",
              "src": "contracts/random/RandomConsumer.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "ab5f2e8baae8d031f7cf40726d39df24b737b930e78a3396048cf8194f247ce8": {
      "address": "0x59508330Ae8f59abFA5544a6F915f18970Baf679",
      "txHash": "0xa8a39f69baadafbc61218fcd78e9a47f0b496e2bfcd1845ca58dfdbe886c4656",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint208)3180_storage)dyn_storage": {
            "label": "struct Checkpoints.Checkpoint208[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace208)3175_storage)": {
            "label": "mapping(address => struct Checkpoints.Trace208)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)311_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint208)3180_storage": {
            "label": "struct Checkpoints.Checkpoint208",
            "members": [
              {
                "label": "_key",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint208",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)1743_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)1397_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)1232_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)1629_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Trace208)3175_storage": {
            "label": "struct Checkpoints.Trace208",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint208)3180_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(VotesStorage)1151_storage": {
            "label": "struct VotesUpgradeable.VotesStorage",
            "members": [
              {
                "label": "_delegatee",
                "type": "t_mapping(t_address,t_address)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_delegateCheckpoints",
                "type": "t_mapping(t_address,t_struct(Trace208)3175_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalCheckpoints",
                "type": "t_struct(Trace208)3175_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint208": {
            "label": "uint208",
            "numberOfBytes": "26"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Votes": [
            {
              "contract": "VotesUpgradeable",
              "label": "_delegatee",
              "type": "t_mapping(t_address,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:41",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_delegateCheckpoints",
              "type": "t_mapping(t_address,t_struct(Trace208)3175_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:43",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_totalCheckpoints",
              "type": "t_struct(Trace208)3175_storage",
              "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:45",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a6692a626d4a7dabf54e0abe8f093779e7143e7cd5dcbfa9e2531d67cc3ae777": {
      "address": "0x04c1c032C1902Eb2DD9cDa462338279cFFAa6C20",
      "txHash": "0x3ea8d24d76d703458fcfe4dc57a83d50471b76182cd9af34334e79d3a840d47d",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint32)8_storage": {
            "label": "uint32[8]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessManager)2477": {
            "label": "contract IAccessManager",
            "numberOfBytes": "20"
          },
          "t_contract(IERC5805)2772": {
            "label": "contract IERC5805",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes4,t_bool))": {
            "label": "mapping(address => mapping(bytes4 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint128,t_bytes32)": {
            "label": "mapping(uint128 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint32)8_storage)": {
            "label": "mapping(uint256 => uint32[8])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ExecutionPlan)1318_storage)": {
            "label": "mapping(uint256 => struct GovernorTimelockAccessUpgradeable.ExecutionPlan)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)723_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalDetails)1240_storage)": {
            "label": "mapping(uint256 => struct GovernorStorageUpgradeable.ProposalDetails)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalVote)1113_storage)": {
            "label": "mapping(uint256 => struct GovernorCountingSimpleUpgradeable.ProposalVote)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessManagedStorage)366_storage": {
            "label": "struct AccessManagedUpgradeable.AccessManagedStorage",
            "members": [
              {
                "label": "_authority",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_consumingSchedule",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Deque)3955_storage": {
            "label": "struct DoubleEndedQueue.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_end",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_uint128,t_bytes32)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(EIP712Storage)2122_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ExecutionPlan)1318_storage": {
            "label": "struct GovernorTimelockAccessUpgradeable.ExecutionPlan",
            "members": [
              {
                "label": "length",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "delay",
                "type": "t_uint32",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "managerData",
                "type": "t_mapping(t_uint256,t_array(t_uint32)8_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GovernorCountingSimpleStorage)1120_storage": {
            "label": "struct GovernorCountingSimpleUpgradeable.GovernorCountingSimpleStorage",
            "members": [
              {
                "label": "_proposalVotes",
                "type": "t_mapping(t_uint256,t_struct(ProposalVote)1113_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(GovernorSettingsStorage)1170_storage": {
            "label": "struct GovernorSettingsUpgradeable.GovernorSettingsStorage",
            "members": [
              {
                "label": "_proposalThreshold",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_votingDelay",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_votingPeriod",
                "type": "t_uint32",
                "offset": 6,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GovernorStorage)755_storage": {
            "label": "struct GovernorUpgradeable.GovernorStorage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_proposals",
                "type": "t_mapping(t_uint256,t_struct(ProposalCore)723_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_governanceCall",
                "type": "t_struct(Bytes32Deque)3955_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(GovernorStorageStorage)1250_storage": {
            "label": "struct GovernorStorageUpgradeable.GovernorStorageStorage",
            "members": [
              {
                "label": "_proposalIds",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_proposalDetails",
                "type": "t_mapping(t_uint256,t_struct(ProposalDetails)1240_storage)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GovernorTimelockAccessStorage)1336_storage": {
            "label": "struct GovernorTimelockAccessUpgradeable.GovernorTimelockAccessStorage",
            "members": [
              {
                "label": "_ignoreToggle",
                "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_executionPlan",
                "type": "t_mapping(t_uint256,t_struct(ExecutionPlan)1318_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_baseDelay",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_manager",
                "type": "t_contract(IAccessManager)2477",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(GovernorVotesStorage)1432_storage": {
            "label": "struct GovernorVotesUpgradeable.GovernorVotesStorage",
            "members": [
              {
                "label": "_token",
                "type": "t_contract(IERC5805)2772",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)1590_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)2008_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ProposalCore)723_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "voteStart",
                "type": "t_uint48",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "voteDuration",
                "type": "t_uint32",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 30,
                "slot": "0"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 31,
                "slot": "0"
              },
              {
                "label": "etaSeconds",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(ProposalDetails)1240_storage": {
            "label": "struct GovernorStorageUpgradeable.ProposalDetails",
            "members": [
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ProposalVote)1113_storage": {
            "label": "struct GovernorCountingSimpleUpgradeable.ProposalVote",
            "members": [
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessManaged": [
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_authority",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "AccessManagedUpgradeable",
              "label": "_consumingSchedule",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/access/manager/AccessManagedUpgradeable.sol:26",
              "offset": 20,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorTimelockAccess": [
            {
              "contract": "GovernorTimelockAccessUpgradeable",
              "label": "_ignoreToggle",
              "type": "t_mapping(t_address,t_mapping(t_bytes4,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockAccessUpgradeable.sol:59",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "GovernorTimelockAccessUpgradeable",
              "label": "_executionPlan",
              "type": "t_mapping(t_uint256,t_struct(ExecutionPlan)1318_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockAccessUpgradeable.sol:61",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "GovernorTimelockAccessUpgradeable",
              "label": "_baseDelay",
              "type": "t_uint32",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockAccessUpgradeable.sol:63",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "GovernorTimelockAccessUpgradeable",
              "label": "_manager",
              "type": "t_contract(IAccessManager)2477",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockAccessUpgradeable.sol:65",
              "offset": 4,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorVotes": [
            {
              "contract": "GovernorVotesUpgradeable",
              "label": "_token",
              "type": "t_contract(IERC5805)2772",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:20",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorStorage": [
            {
              "contract": "GovernorStorageUpgradeable",
              "label": "_proposalIds",
              "type": "t_array(t_uint256)dyn_storage",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorStorageUpgradeable.sol:28",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "GovernorStorageUpgradeable",
              "label": "_proposalDetails",
              "type": "t_mapping(t_uint256,t_struct(ProposalDetails)1240_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorStorageUpgradeable.sol:29",
              "offset": 0,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorCountingSimple": [
            {
              "contract": "GovernorCountingSimpleUpgradeable",
              "label": "_proposalVotes",
              "type": "t_mapping(t_uint256,t_struct(ProposalVote)1113_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorCountingSimpleUpgradeable.sol:31",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.GovernorSettings": [
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_proposalThreshold",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:16",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_votingDelay",
              "type": "t_uint48",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:18",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "GovernorSettingsUpgradeable",
              "label": "_votingPeriod",
              "type": "t_uint32",
              "src": "@openzeppelin/contracts-upgradeable/governance/extensions/GovernorSettingsUpgradeable.sol:20",
              "offset": 6,
              "slot": "1"
            }
          ],
          "erc7201:openzeppelin.storage.Governor": [
            {
              "contract": "GovernorUpgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:52",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "GovernorUpgradeable",
              "label": "_proposals",
              "type": "t_mapping(t_uint256,t_struct(ProposalCore)723_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:54",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "GovernorUpgradeable",
              "label": "_governanceCall",
              "type": "t_struct(Bytes32Deque)3955_storage",
              "src": "@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:60",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
